(rule
 (targets toplevel.ml)
 (deps (:f toplevel.cppo.ml))
 (action
  (chdir %{project_root}
   (run %{bin:cppo} -V OCAML:%{ocaml_version} %{f} -o %{targets}))))

(rule
 (targets ppxc__script.mli)
 (deps ppxc__script_real.mli)
 (action (copy %{deps} %{targets})))

(ocamllex
 (modules inline_lexer))

(library
 (name ppxc__script)
 (synopsis "just ignore it")
 (public_name ppx_cstubs.internal)
 (private_modules attributes ctypes_type_printing_fake evil_hack extract_c extract_c_ml gen_c gen_ml inline_lexer keywords lconst main marshal_types mparsetree myconst ocaml_config options ppxc__script_real ppx_main ptree run script_result std toplevel uniq_ref)
 (libraries re.perl unix integers containers num ppx_tools_versioned ocaml-migrate-parsetree findlib ctypes ppx_tools_versioned.metaquot_411 ppx_cstubs)
 (preprocess (pps ppx_tools_versioned.metaquot_411))
; broken .merlin generation ....
; (preprocess (per_module
;              ((pps ppx_tools_versioned.metaquot_411) extract_c_ml ppxc__script_real ppx_cstubs gen_ml uniq_ref)))
)
